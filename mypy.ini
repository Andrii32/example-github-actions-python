# MyPy config file
# File reference here - http://mypy.readthedocs.io/en/latest/config_file.html#config-file

[mypy]
python_version = 3.8

### Configuring warnings

warn_redundant_casts = True
# (bool, default False)
# Warns about casting an expression to its inferred type.
# This option may only be set in the global section ([mypy]).


### Miscellaneous

warn_unused_configs = True
# (bool, default False)
# Warns about per-module sections in the config file that do not match any files processed when invoking mypy.
# (This requires turning off incremental mode using incremental = False.)


### Configuring error messages

show_error_context = True
# (bool, default False)
# Prefixes each error with the relevant context.
show_column_numbers = True
# (bool, default False)
# Shows column numbers in error messages.
show_error_codes = True
# (bool, default False)
# Shows error codes in error messages. See Error codes for more information.
pretty = True
# (bool, default False)
# Use visually nicer output in error messages: use soft word wrap, show source code snippets,
# and show error location markers.
color_output = True
# (bool, default True)
# Shows error messages with color enabled.
error_summary = True
# (bool, default True)
# Shows a short summary line after error messages.


[mypy-*]


### None and Optional handling

no_implicit_optional = True
# (bool, default False)
# Changes the treatment of arguments with a default value of None by not implicitly making their type Optional.


### Untyped definitions and calls

disallow_untyped_calls=True
# (bool, default False)
# Disallows calling functions without type annotations from functions with type annotations.

disallow_untyped_defs=True
# (bool, default False)
# Disallows defining functions without type annotations or with incomplete type annotations.

disallow_untyped_decorators=True
# (bool, default False)
# Reports an error whenever a function with type annotations is decorated with a decorator without annotations.


### Configuring warnings

warn_unused_ignores = True
# (bool, default False)
# Warns about unneeded # type: ignore comments.

warn_return_any = True
# (bool, default False)
# Shows a warning when returning a value with type Any from a function declared with a non- Any return type.

warn_unreachable = True
# (bool, default False)
# Shows a warning when encountering any code inferred to be unreachable or redundant after performing type analysis.


### Miscellaneous strictness flags

strict_equality = True
# (bool, default False)
# Prohibit equality checks, identity checks, and container checks between non-overlapping types.

[dataclasses-avroschema]
ignore_missing_imports = True

[pydantic]
ignore_missing_imports = True


# Per-module options:

;[mypy-mycode.foo.*]
;...
;
;[mypy-mycode.bar]
;..
;
;[mypy-somelibrary]
;...